Task - 2
Assignment Questions 
Assignment 
Q1. You are writing code for a company. The requirement of the company is that you create a python  function that will check whether the password entered by the user is correct or not. The function should  take the password as input and return the string “Valid Password” if the entered password follows the  below-given password guidelines else it should return “Invalid Password”. 
Note: 1. The Password should contain at least two uppercase letters and at least two lowercase letters. 
2. The Password should contain at least a number and three special characters. 
3. The length of the password should be 10 characters long. 
def check_password(password):
    if len(password) >= 10:
        uppercase = 0
        lowercase = 0
        digits = 0
        special = 0
        special_chars = "!@#$%^&*()_+{}[]|\:;<>,.?/~`"

        for char in password:
            if char.isupper():
                uppercase += 1
            if char.islower():
                lowercase += 1
            if char.isdigit():
                digits += 1
            if char in special_chars:
                special += 1

        if uppercase >= 2 and lowercase >= 2 and digits >= 1 and special >= 3:
            return "Valid Password"
        else:
            return "Invalid Password"
    else:
        return "Invalid Password"

enterthepassword = input('Enter the password: ')
result = check_password(enterthepassword)
print(result)


Q2. Solve the below-given questions using at least one of the following:  
1. Lambda functioJ 
2. Filter functioJ 
3. Zap functioJ 
4. List ComprehensioI 
B Check if the string starts with a particular letterY 
yes=lambda str1:str1.startswith('y')
print(yes('yellow'))

B Check if the string is numeric
yes=lambda str1:str1.isnumeric()
print(yes('1234'))
 
B Sort a list of tuples having fruit names and their quantity. [("mango",99),("orange",80), ("grapes", 1000)
T=[("mango",99),("orange",80), ("grapes", 1000)]
def sorting(x):
        return sorted(T)
sorte_data=list(map(sorting,T))
print(sorte_data)


- B Find the squares of numbers from 1 to 10Y 
L1=list(range(10))
def sq (x):
    return x**2
square=list(map(sq,L1))
print(square)


B Find the cube root of numbers from 1 to 10Y 
L1=list(range(10))
def sq (x):
    return x**3
square=list(map(sq,L1))
print(square)



B Check if a given number is evenY 
x=int(input('enetr the number'))
even=lambda x:x%2==0
if even(x):
    print('number is even')
else:
    print('number is odd')
B Filter odd numbers from the given list. 
L1=[1,2,3,4,5,6,7,8,9,10]
odd=filter(lambda x:x%2!=0,L1)
odd_list=list(odd)
print(odd_list)


 [1,2,3,4,5,6,7,8,9,10- 
x=int(input('enetr the number'))
even=lambda x:x%2==0
if even(x):
    print('number is even')
else:
    print('number is odd')


B Sort a list of integers into positive and negative integers lists. 
 [1,2,3,4,5,6,-1,-2,-3,-4,-5,0] 
l4= [1,2,3,4,5,6,-1,-2,-3,-4,-5,0]
positive=list(filter(lambda x:x>=0,l4))
negative=list(filter(lambda x:x<0,l4))
print(positive)
print(negative)
